#!/bin/bash
#
# Copyright (C) 2014 Betti Oesterholz
#
# Author: Betti Oesterholz
#
#######################################################################
#
# This Script converts the given finger states int a data glove map.
#
# History:
#  08.11.2014  Oesterholz  created


INPUT_FILE=fingerStates.txt
OUTPUT_FILE=fingerStatesOut.txt

MODUS=10

TEXT_PREP_FUN="${MODUS};prepareKey;"
TEXT_KEY_FUN="${MODUS};key;"

REPEAT_DELAY="100"

#finger states
#thumb prepare
FINGER_1_S0=";  0; 499; 150"
#thumb execute
FINGER_1_S1=";500;1500; 800"

FINGER_2_S0=";780;1000; 850"
FINGER_2_S1=";420; 730; 550"
FINGER_2_S2=";  0; 380; 200"

FINGER_3_S0=";640;1000; 680"
FINGER_3_S1=";420; 580; 500"
FINGER_3_S2=";  0; 380; 200"

FINGER_4_S0=";680;1000; 850"
FINGER_4_S1=";420; 620; 550"
FINGER_4_S2=";  0; 380; 200"

#pinky
FINGER_5_S0=";740;1000; 800"
FINGER_5_S1=";520; 680; 600"
FINGER_5_S2=";  0; 480; 250"


# Quaterion 2
QUATERION_1_S0=";;;;; 8000; 21999; 19000;;;;;;;;;"
QUATERION_1_S1=";;;;;    0;  7999;  1000;;;;;;;;;"
QUATERION_1_S2=";;;;;22000; 31000; 25000;;;;;;;;;"


echo "Konverting file: ${INPUT_FILE}"
sed -e "s/';'/SEMICOLON/g" -e "s/'\"'/QUOTE/g" -e "s/'''/SINGLE_QUOTE/g" -e "s/,/COMMA/g"  ${INPUT_FILE} | \
sed -e "s&\([0-9]\);\([0-9]\);\([0-9]\);\([0-9]\);\([^;]*\)-> *\([^;]*\) */ *\([^;]*\) */ *\([^;]*\) *&${TEXT_PREP_FUN}\6;${REPEAT_DELAY};0;\1;\2;\3;\4;0;\n${TEXT_KEY_FUN}\6;${REPEAT_DELAY};1;\1;\2;\3;\4;0;\n${TEXT_PREP_FUN}\7;${REPEAT_DELAY};0;\1;\2;\3;\4;1;\n${TEXT_KEY_FUN}\7;${REPEAT_DELAY};1;\1;\2;\3;\4;1;\n${TEXT_PREP_FUN}\8;${REPEAT_DELAY};0;\1;\2;\3;\4;2;\n${TEXT_KEY_FUN}\8;${REPEAT_DELAY};1;\1;\2;\3;\4;2;&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;&\1;\2;\3;\4;\5;\6;\7;\8;\9;${QUATERION_1_S0}&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;&\1;\2;\3;\4;\5;\6;\7;\8;\9;${QUATERION_1_S1}&"  \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);2;&\1;\2;\3;\4;\5;\6;\7;\8;\9;${QUATERION_1_S2}&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;\(.*\)&\1;\2;\3;\4;\5;\6;\7;\8;${FINGER_5_S0};\9&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;\(.*\)&\1;\2;\3;\4;\5;\6;\7;\8;${FINGER_5_S1};\9&"  \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);2;\(.*\)&\1;\2;\3;\4;\5;\6;\7;\8;${FINGER_5_S2};\9&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;\(.*\)&\1;\2;\3;\4;\5;\6;\7;${FINGER_4_S0};\8&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;\(.*\)&\1;\2;\3;\4;\5;\6;\7;${FINGER_4_S1};\8&"  \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);2;\(.*\)&\1;\2;\3;\4;\5;\6;\7;${FINGER_4_S2};\8&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;\(.*\)&\1;\2;\3;\4;\5;\6;${FINGER_3_S0};\7&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;\(.*\)&\1;\2;\3;\4;\5;\6;${FINGER_3_S1};\7&"  \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);2;\(.*\)&\1;\2;\3;\4;\5;\6;${FINGER_3_S2};\7&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;\(.*\)&\1;\2;\3;\4;\5;${FINGER_2_S0};\6&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;\(.*\)&\1;\2;\3;\4;\5;${FINGER_2_S1};\6&"  \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);2;\(.*\)&\1;\2;\3;\4;\5;${FINGER_2_S2};\6&" | \
sed -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);0;\(.*\)&\1;\2;\3;\4;${FINGER_1_S0};\5&" \
    -e "s&\([^;]*\);\([^;]*\);\([^;]*\);\([^;]*\);1;\(.*\)&\1;\2;\3;\4;${FINGER_1_S1};\5&" | \
sed -e 's/ //g' | \
sed -e "s/ä/SPECIAL_CHAR_DEU_AE/g" -e "s/Ä/SPECIAL_CHAR_DEU_UP_AE/g" \
    -e "s/ö/SPECIAL_CHAR_DEU_OE/g" -e "s/Ö/SPECIAL_CHAR_DEU_UP_OE/g" \
    -e "s/ü/SPECIAL_CHAR_DEU_UE/g" -e "s/Ü/SPECIAL_CHAR_DEU_UP_UE/g" \
    -e "s/ß/SPECIAL_CHAR_DEU_SZ/g" \
    -e 's/`/DIACRITIC_GRAVE/g' -e "s/°/DIACRITIC_GRAVE/g" > ${OUTPUT_FILE}











