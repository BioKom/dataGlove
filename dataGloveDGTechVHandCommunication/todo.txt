
build order:
	- cDataGloveMapper
	- cMouseDevice



* startDataGlove
	* contains main
	* later (class?) method for searching for data gloves

* cDataGloveDGTechVHand
	* abstraction layer vor comunicating/messages for the data glove (VHand 3.0)
	* static methods to create and evalue the communication messages
	** normal method for sending each of this wich are using the statig methods
	* static boolean checkDevice( instream & strDevice )
	** boolean checkDevice()


- cDataGloveMapper: public iDataGloveNewData
	- mapps betwean a hand gesture and it's action

- eHandGestureEvent?
	
- cMouseDevice
	- methods to call which change the mouse device






==use without root rights==

Yes, you may write an udev rule.

In /etc/udev/rules.d make a file 30-mydevice.rules (number has to be from 0 to 99 and decides only about the script running order; name doesn't really matter, it has just to be descriptive; .rules extension is required, though)

In this example I'm assuming your device is USB based and you know it's vendor and product id (can be checked using lsusb -v), and you're using mydevice group your user has to be in to use the device. This should be file contents in that case:

SUBSYSTEM=="usb", SYSFS{idVendor}=="0123", SYSFS{idProduct}=="4567", ACTION=="add", GROUP="mydevice", MODE="0664"

MODE equal to 0664 allows device to be written to by it's owner (probably root) and the defined group.





Example



Type 0:

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: ''  0x0B   11  //len
Byte 4: ''  0x00    0   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x06    6  //clock
Byte 9: ''  0xFF  255  //clock
Byte 10: ''  0xD6  214  //clock
Byte 11: ''  0x05    5  //status
Byte 12: ''  0x20   32  //status
Byte 13: ''  0x3A   58  //CRC
Byte 14: '#'  0x23   35  //end



Type: 1

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: '%'  0x25   37  //len
Byte 4: ''  0x01    1   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x00    0  //clock
Byte 9: ''  0x49   73  //clock
Byte 10: ''  0xD4  212  //clock
Byte 11: ''  0x00    0  //Q1
Byte 12: ''  0x00    0  //Q1
Byte 13: ''  0x7F  127  //Q1
Byte 14: ''  0xDD  221  //Q1
Byte 15: ''  0xFF  255  //Q2
Byte 16: ''  0xFF  255  //Q2
Byte 17: ''  0xFD  253  //Q2
Byte 18: ''  0xD4  212  //Q2
Byte 19: ''  0x00    0  //Q3
Byte 20: ''  0x00    0  //Q3
Byte 21: ''  0x05    5  //Q3
Byte 22: ''  0x45   69  //Q3
Byte 23: ''  0xFF  255  //Q4
Byte 24: ''  0xFF  255  //Q4
Byte 25: ''  0xFF  255  //Q4
Byte 26: ''  0x1F   31  //Q4
Byte 27: ''  0x00    0  //f1
Byte 28: ''  0x18   24  //f1
Byte 29: ''  0x00    0  //f2
Byte 30: ''  0x18   24  //f2
Byte 31: ''  0x00    0  //f3
Byte 32: ''  0x98  152  //f3
Byte 33: ''  0x00    0  //f4
Byte 34: ''  0x00    0  //f4
Byte 35: ''  0x00    0  //f5
Byte 36: ''  0xA8  168  //f5
Byte 37: ''  0x05    5  //status?
Byte 38: ''  0x20   32  //status
Byte 39: ''  0x98  152  //CRC
Byte 40: '#'  0x23   35  //end


Type 2:

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: ''  0x1B   27  //len
Byte 4: ''  0x02    2   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x04    4  //clock
Byte 9: ''  0x0D   13  //clock
Byte 10: ''  0x08    8  //clock
Byte 11: ''  0x00    0  //Quat1
Byte 12: ''  0x00    0  //Quat1
Byte 13: ''  0x7F  127  //Quat1
Byte 14: ''  0xA9  169  //Quat1
Byte 15: ''  0x00    0  //Quat2
Byte 16: ''  0x00    0  //Quat2
Byte 17: ''  0x00    0  //Quat2
Byte 18: ''  0xBB  187  //Quat2
Byte 19: ''  0x00    0  //Quat3
Byte 20: ''  0x00    0  //Quat3
Byte 21: ''  0x02    2  //Quat3
Byte 22: ''  0x7C  124  //Quat3
Byte 23: ''  0xFF  255  //Quat4
Byte 24: ''  0xFF  255  //Quat4
Byte 25: ''  0xF7  247  //Quat4
Byte 26: ''  0x1C   28  //Quat4
Byte 27: ''  0x05    5  //status
Byte 28: ''  0x10   16  //status
Byte 29: ''  0xEC  236  //CRC
Byte 30: '#'  0x23   35  //end


Type 3:

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: ''  0x27   39  //len
Byte 4: ''  0x03    3   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x08    8  //clock
Byte 9: ''  0x96  150  //clock
Byte 10: ''  0x02    2  //clock
Byte 11: ''  0x00    0  //GYROX
Byte 12: ''  0x05    5  //GYROX
Byte 13: ''  0x00    0  //GYROY
Byte 14: ''  0x04    4  //GYROY
Byte 15: ''  0x00    0  //GYROZ
Byte 16: ''  0x09    9  //GYROZ
Byte 17: ''  0x17   23  //MAGNX
Byte 18: ''  0xE6  230  //MAGNX
Byte 19: ''  0x00    0  //MAGNY
Byte 20: ''  0x35   53  //MAGNY
Byte 21: ''  0xDB  219  //MAGNZ
Byte 22: ''  0x75  117  //MAGNZ
Byte 23: ''  0xFD  253  //ACCELX
Byte 24: ''  0x82  130  //ACCELX
Byte 25: ''  0xFE  254  //ACCELY
Byte 26: ''  0x10   16  //ACCELY
Byte 27: ''  0xBF  191  //ACCELZ
Byte 28: ''  0x6A  106  //ACCELZ
Byte 29: ''  0x00    0  //f1
Byte 30: ''  0x00    0  //f1
Byte 31: ''  0x00    0  //f2
Byte 32: ''  0x00    0  //f2
Byte 33: ''  0x00    0  //f3
Byte 34: ''  0x48   72  //f3
Byte 35: ''  0x00    0  //f4
Byte 36: ''  0x08    8  //f4
Byte 37: ''  0x00    0  //f5
Byte 38: ''  0x78  120  //f5
Byte 39: ''  0x05    5  //status
Byte 40: ''  0x20   32  //status
Byte 41: ''  0x30   48  //CRC
Byte 42: '#'  0x23   35  //end



Type: 4

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: ''  0x1D   29  //len
Byte 4: ''  0x04    4   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x0C   12  //clock
Byte 9: ''  0x78  120  //clock
Byte 10: ''  0xB2  178  //clock
Byte 11: ''  0xFF  255  //GYROX
Byte 12: ''  0xFE  254  //GYROX
Byte 13: ''  0x00    0  //GYROY
Byte 14: ''  0x06    6  //GYROY
Byte 15: ''  0x00    0  //GYROZ
Byte 16: ''  0x08    8  //GYROZ
Byte 17: ''  0x17   23  //MAGNX
Byte 18: ''  0xE8  232  //MAGNX
Byte 19: ''  0x00    0  //MAGNY
Byte 20: ''  0x33   51  //MAGNY
Byte 21: ''  0x3E   62  //MAGNZ
Byte 22: ''  0xEE  238  //MAGNZ
Byte 23: ''  0xFD  253  //ACCELX
Byte 24: ''  0xD0  208  //ACCELX
Byte 25: ''  0xFE  254  //ACCELY
Byte 26: ''  0x28   40  //ACCELY
Byte 27: ''  0xBF  191  //ACCELZ
Byte 28: ''  0x7E  126  //ACCELZ
Byte 29: ''  0x05    5  //status
Byte 30: ''  0x20   32  //status
Byte 31: ''  0x44   68  //CRC
Byte 32: '#'  0x23   35  //end


Type: 5

Byte 1: '$'  0x24   36  //begin
Byte 2: ''  0x0A   10  //type msg
Byte 3: ''  0x15   21  //len
Byte 4: ''  0x05    5   //type
Byte 5: ''  0x00    0   //id
Byte 6: ''  0x01    1   //id
Byte 7: ''  0x00    0  //clock
Byte 8: ''  0x0F   15  //clock
Byte 9: ''  0xB5  181  //clock
Byte 10: ''  0x18   24  //clock
Byte 11: ''  0x00    0  //f1
Byte 12: ''  0x00    0  //f1
Byte 13: ''  0x00    0  //f2
Byte 14: ''  0x00    0  //f2
Byte 15: ''  0x00    0  //f3
Byte 16: ''  0x48   72  //f3
Byte 17: ''  0x00    0  //f4
Byte 18: ''  0x08    8  //f4
Byte 19: ''  0x00    0  //f5
Byte 20: ''  0x78  120  //f5
Byte 21: ''  0x05    5  //status
Byte 22: ''  0x20   32  //status
Byte 23: ''  0x12   18  //CRC
Byte 24: '#'  0x23   35  //end






